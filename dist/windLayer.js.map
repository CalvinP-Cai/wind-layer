{"version":3,"file":"windLayer.js","sources":["../src/polyfill/assign.js","../src/helper/index.js","../src/polyfill/requestAnimFrame.js","../node_modules/quickselect/quickselect.js","../node_modules/rbush/index.js","../src/index.js"],"sourcesContent":["if (typeof Object.assign !== 'function') {\r\n  // Must be writable: true, enumerable: false, configurable: true\r\n  Object.defineProperty(Object, 'assign', {\r\n    value: function assign (target, varArgs) { // .length of function is 2\r\n      'use strict';\r\n      if (target == null) { // TypeError if undefined or null\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      }\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) { // Skip over if undefined or null\r\n          for (var nextKey in nextSource) {\r\n            // Avoid bugs when hasOwnProperty is shadowed\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n              to[nextKey] = nextSource[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n","/**\r\n * @returns {Number} the value x clamped to the range [low, high].\r\n */\r\nconst clamp = function (x, range) {\r\n  return Math.max(range[0], Math.min(x, range[1]));\r\n};\r\n\r\n/**\r\n * @returns {Boolean} true if agent is probably a mobile device. Don't really care if this is accurate.\r\n */\r\nconst isMobile = function () {\r\n  return (/android|blackberry|iemobile|ipad|iphone|ipod|opera mini|webos/i).test(navigator.userAgent);\r\n};\r\n\r\n/**\r\n * create canvas\r\n * @param width\r\n * @param height\r\n * @param Canvas\r\n * @returns {HTMLCanvasElement}\r\n */\r\nconst createCanvas = (width, height, Canvas) => {\r\n  if (typeof document !== 'undefined') {\r\n    const canvas = document.createElement('canvas')\r\n    canvas.width = width\r\n    canvas.height = height\r\n    return canvas\r\n  } else {\r\n    // create a new canvas instance in node.js\r\n    // the canvas class needs to have a default constructor without any parameter\r\n    return new Canvas(width, height)\r\n  }\r\n};\r\n\r\n/**\r\n * bind\r\n * @param fn\r\n * @param context\r\n * @returns {Function}\r\n */\r\nconst bind = function (fn, context) {\r\n  const args = arguments.length > 2 ? Array.prototype.slice.call(arguments, 2) : null;\r\n  return function () {\r\n    return fn.apply(context, args || arguments);\r\n  };\r\n};\r\n\r\nexport {\r\n  bind,\r\n  clamp,\r\n  isMobile,\r\n  createCanvas\r\n}\r\n","import { bind } from '../helper'\r\n\r\nwindow.requestAnimFrame = function (fn, immediate, context, element) {\r\n  const f = bind(fn, context);\r\n  const request = (window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback) {\r\n      window.setTimeout(callback, 1000 / 60);\r\n    });\r\n  if (request) {\r\n    return request.call(window, f, element);\r\n  } else {\r\n    if (immediate) {\r\n      f();\r\n    } else {\r\n      return window.setTimeout(f, 16);\r\n    }\r\n  }\r\n};\r\n\r\nconst getCancelAnimFrame = function () {\r\n  const prefixs = ['webkit', 'moz', 'o', 'ms'];\r\n  let func = window.cancelAnimationFrame;\r\n  for (let i = 0, len = prefixs.length; i < len && !func; i++) {\r\n    func = window[prefixs[i] + 'CancelAnimationFrame'] || window[prefixs[i] + 'CancelRequestAnimationFrame'];\r\n  }\r\n  return func;\r\n};\r\n\r\nwindow.cancelAnimFrame = function (id) {\r\n  const cancel = getCancelAnimFrame();\r\n  if (cancel) {\r\n    cancel.call(window, id);\r\n  } else {\r\n    window.clearTimeout(id);\r\n  }\r\n};\r\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import './polyfill/assign';\nimport './polyfill/requestAnimFrame';\nimport ol from 'openlayers';\nimport rbush from 'rbush';\nimport { isMobile, createCanvas } from './helper';\n\nconst _options = {\n  gridPixels: 4, // 用于插值的网格像素边长\n  gridMaxDivs: 200, // 最大网格边划分数量\n  gridReduceFactor: 2, // 在移动设备上适当减少网格数量的比例\n  fieldFactor: 0.8,\n  fieldMaxIntensity: 50, // 可视化时限制的流体场最大强度，比如风速最大值\n  maxParticleAge: 100,\n  particleCountFactor: 0.05,\n  lineWidth: 1.2,\n  opacity: 1.0,\n  colors: ['#fff', '#fff', '#fff', '#fff', '#fff'],\n  searchSteps: 3, // 插值检索的尝试次数\n  interpolateCount: 4, // 插值使用的数据数量\n  frameRate: 15\n};\n\nconst NULL_WIND_VECTOR = [NaN, NaN, null];\n\nclass WindyLayer extends ol.layer.Image {\n  constructor (data, options = {}) {\n    super(options);\n\n    this._options = Object.assign({}, _options, options);\n\n    /**\n     * 矢量图层\n     * @type {null}\n     */\n    this._canvas = null;\n\n    /**\n     * columns\n     * @type {Array}\n     * @private\n     */\n    this._grid = [];\n    this._dirty = true;\n\n    /**\n     * color\n     * @type {Array}\n     * @private\n     */\n    this._batches = [];\n\n    /**\n     * is playing\n     * @type {boolean}\n     * @private\n     */\n    this._playing = false;\n\n    /**\n     * btree\n     * @type {rbush|Object}\n     * @private\n     */\n    this._tree = rbush();\n\n    /**\n     * windy 数据\n     */\n    this.data = [];\n    if (data) {\n      this.setData(data)\n    }\n\n    /**\n     * animate\n     * @type {null}\n     * @private\n     */\n    this._animationLoop = null;\n\n    this.setSource(new ol.source.ImageCanvas({\n      logo: options.logo,\n      state: options.state,\n      attributions: options.attributions,\n      resolutions: options.resolutions,\n      canvasFunction: this.canvasFunction.bind(this),\n      projection: (options.hasOwnProperty('projection') ? options.projection : 'EPSG:3857'),\n      ratio: (options.hasOwnProperty('ratio') ? options.ratio : 1)\n    }));\n    this.on('precompose', this.redraw, this);\n  }\n\n  /**\n   * get layer data\n   * @returns {*}\n   */\n  getData () {\n    return this.data;\n  }\n\n  /**\n   * set layer data\n   * @param data\n   * @returns {WindyLayer}\n   */\n  setData (data) {\n    const _map = this.getMap();\n    if (!_map) return this;\n    let [us, vs] = [data[0], data[1]];\n    let [cols, rows] = [us.header.nx, us.header.ny];\n    for (let j = 0; j < rows; j++) {\n      const lat = 90 - 180 * j / rows;\n      if (Math.abs(lat) > 85.1) {\n        continue;\n      }\n      for (let i = 0; i < cols; i++) {\n        const lon = -180 + 360 * i / cols;\n        const point = ol.proj.transform([lon, lat], 'EPSG:4326', 'EPSG:3857');\n        const idx = cols * j + i;\n        const u = us.data[idx];\n        const v = vs.data[idx];\n        this.addDataPoint(point[0], point[1], u, v);\n      }\n    }\n    return this\n  }\n\n  /**\n   * add point\n   * @param x\n   * @param y\n   * @param uid\n   * @param value\n   * @param feature\n   */\n  addDataPoint (x, y, uid, value, feature) {\n    uid = uid || 0;\n    value = value || 0;\n    this._tree.insert({\n      minX: x,\n      minY: y,\n      maxX: x,\n      maxY: y,\n      x: x,\n      y: y,\n      u: uid,\n      v: value\n    })\n  }\n\n  /**\n   * render windy layer\n   * @returns {WindyLayer}\n   */\n  render (canvas) {\n    const extent = this._getExtent();\n    if (!this.getData() || !extent) return this;\n    if (!this.getData()) return this;\n    if (canvas && !this._playing) {\n      this.start();\n    } else if (canvas && this._playing) {\n      this.update();\n    }\n    return this\n  }\n\n  /**\n   * re-draw\n   */\n  redraw () {\n    if (!this._playing) return;\n    const _extent = this._options.extent || this._getExtent();\n    this.setExtent(_extent)\n  }\n\n  /**\n   * build grid\n   */\n  buildGrid () {\n    const map = this.getMap();\n    if (!map || !this._dirty) {\n      return;\n    }\n    const _size = map.getSize();\n    const _extent = this._options.extent || this._getExtent();\n    const dim = Math.max(_size[0], _size[1]);\n    let gridDivs = Math.min(dim / this._options.gridPixels, this._options.gridMaxDivs);\n    if (isMobile()) {\n      gridDivs /= this._options.gridReduceFactor;\n    }\n    const gridSize = this._gridSize = Math.max(_extent[2] - _extent[0], _extent[3] - _extent[1]) / gridDivs;\n    const results = this._tree.search({\n      minX: _extent[0],\n      minY: _extent[1],\n      maxX: _extent[2],\n      maxY: _extent[3]\n    });\n    const count = results && results.length;\n    const divCount = Math.sqrt(count) || 1;\n    const expand = Math.max((_extent[2] - _extent[0]), (_extent[3] - _extent[1])) / divCount;\n    // 构建格网\n    this._gridColCount = Math.ceil((_extent[2] - _extent[0]) / gridSize);\n    this._gridRowCount = Math.ceil((_extent[3] - _extent[1]) / gridSize);\n    const grid = [];\n    for (let j = 0; j < this._gridRowCount + 1; j++) {\n      let y = _extent[1] + j * gridSize;\n      if (y >= _extent[1] && y <= _extent[3]) {\n        const row = [];\n        for (let i = 0; i < this._gridColCount + 1; i++) {\n          let x = _extent[0] + i * gridSize;\n          row[i] = this._interpolate(x, y, [x - expand, y - expand, x + expand, y + expand]);\n          let _count = 1;\n          while (row[i][2] === null && _count <= this._options.searchSteps) {\n            _count *= 2;\n            let _expand = _count * expand;\n            row[i] = this._interpolate(x, y, [x - _expand, y - _expand, x + _expand, y + _expand]);\n          }\n        }\n        grid[j] = row;\n      }\n    }\n    this._grid = grid;\n    this._dirty = false;\n  }\n\n  /**\n   * canvas constructor\n   * @param extent\n   * @param resolution\n   * @param pixelRatio\n   * @param size\n   * @param projection\n   * @returns {*}\n   */\n  canvasFunction (extent, resolution, pixelRatio, size, projection) {\n    if (!this._canvas) {\n      this._canvas = createCanvas(size[0], size[1])\n    } else {\n      this._canvas.width = size[0]\n      this._canvas.height = size[1]\n    }\n    if (resolution <= this.get('maxResolution')) {\n      this.render(this._canvas)\n    } else {\n      // console.warn('超出所设置最大分辨率！')\n    }\n    return this._canvas\n  }\n\n  /**\n   * get context\n   * @returns {*}\n   */\n  getContext () {\n    return this._canvas && this._canvas.getContext('2d');\n  }\n\n  /**\n   * get map current extent\n   * @returns {ol.View|*|Array<number>}\n   * @private\n   */\n  _getExtent () {\n    if (!this.getMap()) return\n    const size = this._getMapSize()\n    const _view = this.getMap().getView()\n    return _view && _view.calculateExtent(size)\n  }\n\n  /**\n   * get size\n   * @returns {ol.Size|*}\n   * @private\n   */\n  _getMapSize () {\n    if (!this.getMap()) return;\n    return this.getMap().getSize();\n  }\n\n  /**\n   * append layer to map\n   * @param map\n   */\n  appendTo (map) {\n    if (map && map instanceof ol.Map) {\n      this.set('originMap', map)\n      map.addLayer(this)\n    } else {\n      throw new Error('not map object')\n    }\n  }\n\n  /**\n   * clearWind method will retain the instance\n   * @private\n   */\n  clearWind () {\n    const _map = this.getMap();\n    if (!_map) return;\n    this._cloneLayer = this;\n    _map.removeLayer(this);\n    this.changed();\n    this.getMap().renderSync();\n  }\n\n  /**\n   * remove layer this instance will be destroyed after remove\n   */\n  removeLayer () {\n    const _map = this.getMap();\n    if (!_map) return;\n    this.un('precompose', this.redraw, this);\n    _map.removeLayer(this);\n    delete this._canvas;\n    delete this._cloneLayer;\n  }\n\n  /**\n   * set map\n   * @param map\n   */\n  setMap (map) {\n    this.set('originMap', map)\n    // ol.layer.Image.prototype.setMap.call(this, map)\n  }\n\n  /**\n   * get map\n   */\n  getMap () {\n    return this.get('originMap')\n  }\n\n  /**\n   * start ani\n   * @returns {WindyLayer}\n   */\n  start () {\n    const that = this;\n    this.buildGrid();\n    let then = Date.now();\n    that._playing = true;\n    (function frame () {\n      that._animationLoop = window.requestAnimFrame(frame);\n      const now = Date.now();\n      const delta = now - then;\n      if (delta > 1000 / that._options.frameRate) {\n        then = now - (delta % 1000 / that._options.frameRate);\n        that._evolve();\n        that._draw();\n      }\n    })();\n    return this\n  }\n\n  /**\n   * stop ani\n   * @returns {WindyLayer}\n   */\n  stop () {\n    this._playing = true\n    if (this._animationLoop) window.cancelAnimFrame(this._animationLoop);\n    return this\n  }\n\n  /**\n   * clear layer\n   * @param forbidRedraw\n   * @returns {WindyLayer}\n   */\n  clear (forbidRedraw) {\n    this.particles = null;\n    this._clearContext();\n    this._dirty = true;\n    return this;\n  }\n\n  /**\n   * update layer\n   */\n  update () {\n    this._dirty = true;\n    this._draw();\n  }\n\n  /**\n   * clear context\n   * @private\n   */\n  _clearContext () {\n    const context = this.getContext();\n    context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  /**\n   * draw line\n   * @private\n   */\n  _draw () {\n    const map = this.getMap();\n    const context = this.getContext();\n    if (this._dirty) {\n      this._clearContext();\n      if (this._playing) {\n        setTimeout(() => {\n          this.buildGrid();\n          this._particles = null;\n        }, 1000 / this._options.frameRate);\n      }\n    }\n    if (this._playing) {\n      if (!this._particles) {\n        this._particles = [];\n        const particleCount = this._gridColCount * this._gridRowCount * this._options.particleCountFactor;\n        for (let i = 0; i < particleCount; i++) {\n          this._particles.push(this._getParticle());\n        }\n      }\n      this._evolve();\n      if (!this._batches) {\n        return;\n      }\n      // Fade existing particle trails.\n      context.globalAlpha = this.getOpacity() || 0.75;\n      context.globalCompositeOperation = 'destination-out';\n      context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n      context.globalCompositeOperation = 'source-over';\n      context.lineWidth = this._options.lineWidth;\n      context.globalAlpha = this.getOpacity() || 0.75;\n      const extent = this._getExtent();\n      const gridSize = this._gridSize;\n      let [particle] = [{}];\n      for (let i = 0; i < this._batches.length; i++) {\n        const batch = this._batches[i];\n        context.beginPath();\n        context.strokeStyle = this._options.colors[i];\n        for (let j = 0; j < batch.length; j++) {\n          particle = batch[j] || {};\n          const x = extent[0] + gridSize * particle.x;\n          const y = extent[1] + gridSize * particle.y;\n          const xt = extent[0] + gridSize * particle.xt;\n          const yt = extent[1] + gridSize * particle.yt;\n          if (extent && (x < extent[0] || x > extent[2])) {\n            continue;\n          }\n          let pixel = map.getPixelFromCoordinate([x, y]);\n          context.moveTo(pixel[0], pixel[1]);\n          pixel = map.getPixelFromCoordinate([xt, yt]);\n          context.lineTo(pixel[0], pixel[1]);\n          particle.x = particle.xt;\n          particle.y = particle.yt;\n        }\n        context.stroke();\n      }\n    }\n  }\n\n  /**\n   * get particle\n   * @param age\n   */\n  _getParticle (age) {\n    return {\n      x: Math.round(Math.random() * this._gridColCount),\n      y: Math.round(Math.random() * this._gridRowCount),\n      age: age === undefined ? Math.floor(Math.random() * this._options.maxParticleAge) : age\n    }\n  }\n\n  /**\n   * get field\n   * @param x\n   * @param y\n   * @returns {*}\n   * @private\n   */\n  _getField (x, y) {\n    if (!this._grid) return NULL_WIND_VECTOR;\n    const rows = this._grid[Math.round(y)];\n    /* eslint-disable-next-line */\n    return (rows && rows[Math.round(x)] || NULL_WIND_VECTOR);\n  }\n\n  /**\n   * evolve\n   * @private\n   */\n  _evolve () {\n    const particles = this._particles;\n    if (!particles) {\n      return;\n    }\n    const batches = this._options.colors.map(function () {\n      return [];\n    });\n    const fieldScale = this._options.fieldFactor / this._options.fieldMaxIntensity;\n    let particle;\n    for (let i = 0; i < particles.length; i++) {\n      particle = particles[i];\n      if (particle.age > this._options.maxParticleAge) {\n        particle = this._getParticle(0);\n      }\n      let [x, y] = [particle.x, particle.y];\n      let v = this._getField(x, y);\n      if (!v[2]) {\n        particle = this._getParticle(0);\n      } else if (this._getField(x, y)[0] !== null) {\n        particle.xt = x + v[0] * fieldScale;\n        particle.yt = y + v[1] * fieldScale;\n        batches[this._colorIndex(v[2])].push(particle);\n      } else {\n        particle.x = x + v[0] * fieldScale;\n        particle.y = y + v[1] * fieldScale;\n      }\n      particle.age++;\n    }\n    this._batches = batches;\n  }\n\n  /**\n   * get inter polate\n   * @param x\n   * @param y\n   * @param searchExtent\n   * @returns {*}\n   * @private\n   */\n  _interpolate (x, y, searchExtent) {\n    const results = this._tree.search({\n      minX: searchExtent[0],\n      minY: searchExtent[1],\n      maxX: searchExtent[2],\n      maxY: searchExtent[3]\n    });\n    let [Σux, Σvx, Σweight] = [0, 0, 0];\n    var dx, dy, dd, weight;\n    var dataPoint, u, v;\n    for (let i = 0, iLen = Math.min(this._options.interpolateCount, results.length); i < iLen; i++) {\n      dataPoint = results[i];\n      dx = dataPoint.x - x;\n      dy = dataPoint.y - y;\n      if (dx === 0 && dy === 0) {\n        u = dataPoint.u;\n        v = dataPoint.v;\n        return [u, v, Math.sqrt(u * u + v * v)];\n      }\n      dd = dx * dx + dy * dy;\n      weight = Math.sqrt(1 / dd);\n      Σux += dataPoint.u * weight;\n      Σvx += dataPoint.v * weight;\n      Σweight += weight;\n    }\n    if (Σweight > 0) {\n      u = Σux / Σweight;\n      v = Σvx / Σweight;\n      return [u, v, Math.sqrt(u * u + v * v)];\n    }\n    return NULL_WIND_VECTOR;\n  }\n\n  /**\n   * get color index\n   * @param m\n   * @returns {number}\n   * @private\n   */\n  _colorIndex (m) {\n    const fieldMaxIntensity = this._options.fieldMaxIntensity;\n    return Math.floor(Math.min(m, fieldMaxIntensity) / fieldMaxIntensity * (this._options.colors.length - 1));\n  }\n}\n\nexport default WindyLayer\n"],"names":["Object","assign","defineProperty","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","isMobile","test","navigator","userAgent","createCanvas","width","height","Canvas","document","canvas","createElement","bind","fn","context","args","Array","slice","apply","window","requestAnimFrame","immediate","element","f","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","getCancelAnimFrame","prefixs","func","cancelAnimationFrame","i","len","cancelAnimFrame","id","cancel","clearTimeout","this","_options","NULL_WIND_VECTOR","NaN","WindyLayer","data","options","_canvas","_grid","_dirty","_batches","_playing","_tree","rbush","setData","_animationLoop","setSource","ol","source","ImageCanvas","logo","state","attributions","resolutions","canvasFunction","projection","ratio","on","redraw","getData","_map","getMap","us","vs","header","nx","ny","cols","rows","j","lat","Math","abs","lon","point","proj","transform","idx","u","v","addDataPoint","x","y","uid","value","feature","insert","render","extent","_getExtent","start","update","_extent","setExtent","buildGrid","map","_size","getSize","dim","max","gridDivs","min","gridPixels","gridMaxDivs","gridReduceFactor","gridSize","_gridSize","results","search","count","divCount","sqrt","expand","_gridColCount","ceil","_gridRowCount","grid","row","_interpolate","_count","searchSteps","_expand","resolution","pixelRatio","size","get","getContext","_getMapSize","_view","getView","calculateExtent","appendTo","Map","set","addLayer","Error","clearWind","_cloneLayer","removeLayer","changed","renderSync","un","setMap","that","then","Date","now","frame","delta","frameRate","_evolve","_draw","stop","clear","forbidRedraw","particles","_clearContext","clearRect","_particles","particleCount","particleCountFactor","push","_getParticle","globalAlpha","getOpacity","globalCompositeOperation","fillRect","lineWidth","particle","batch","beginPath","strokeStyle","colors","xt","yt","pixel","getPixelFromCoordinate","moveTo","lineTo","stroke","age","round","random","undefined","floor","maxParticleAge","_getField","batches","fieldScale","fieldFactor","fieldMaxIntensity","_colorIndex","searchExtent","Σux","Σvx","Σweight","dx","dy","dd","weight","dataPoint","iLen","interpolateCount","m","layer","Image"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAI,OAAOA,OAAOC,MAAd,KAAyB,UAA7B,EAAyC;SAEhCC,cAAP,CAAsBF,MAAtB,EAA8B,QAA9B,EAAwC;WAC/B,SAASC,MAAT,CAAiBE,MAAjB,EAAyBC,OAAzB,EAAkC;AACvC;UACID,UAAU,IAAd,EAAoB;cACZ,IAAIE,SAAJ,CAAc,4CAAd,CAAN;;UAEEC,KAAKN,OAAOG,MAAP,CAAT;WACK,IAAII,QAAQ,CAAjB,EAAoBA,QAAQC,UAAUC,MAAtC,EAA8CF,OAA9C,EAAuD;YACjDG,aAAaF,UAAUD,KAAV,CAAjB;YACIG,cAAc,IAAlB,EAAwB;eACjB,IAAIC,OAAT,IAAoBD,UAApB,EAAgC;gBAE1BV,OAAOY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,UAArC,EAAiDC,OAAjD,CAAJ,EAA+D;iBAC1DA,OAAH,IAAcD,WAAWC,OAAX,CAAd;;;;;aAKDL,EAAP;KAlBoC;cAoB5B,IApB4B;kBAqBxB;GArBhB;;;ACQF,IAAMS,WAAW,SAAXA,QAAW,GAAY;0EACpB,CAAmEC,IAAnE,CAAwEC,UAAUC,SAAlF;;CADT;;AAWA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;MAC1C,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;QAC7BC,SAASD,SAASE,aAAT,CAAuB,QAAvB,CAAf;WACOL,KAAP,GAAeA,KAAf;WACOC,MAAP,GAAgBA,MAAhB;WACOG,MAAP;GAJF,MAKO;WAGE,IAAIF,MAAJ,CAAWF,KAAX,EAAkBC,MAAlB,CAAP;;CATJ;;AAmBA,IAAMK,OAAO,SAAPA,IAAO,CAAUC,EAAV,EAAcC,OAAd,EAAuB;MAC5BC,OAAOrB,UAAUC,MAAV,GAAmB,CAAnB,GAAuBqB,MAAMlB,SAAN,CAAgBmB,KAAhB,CAAsBjB,IAAtB,CAA2BN,SAA3B,EAAsC,CAAtC,CAAvB,GAAkE,IAA/E;SACO,YAAY;WACVmB,GAAGK,KAAH,CAASJ,OAAT,EAAkBC,QAAQrB,SAA1B,CAAP;GADF;CAFF;;ACtCAyB,OAAOC,gBAAP,GAA0B,UAAUP,EAAV,EAAcQ,SAAd,EAAyBP,OAAzB,EAAkCQ,OAAlC,EAA2C;MAC7DC,IAAIX,KAAKC,EAAL,EAASC,OAAT,CAAV;MACMU,UAAWL,OAAOM,qBAAP,IACfN,OAAOO,2BADQ,IAEfP,OAAOQ,wBAFQ,IAGfR,OAAOS,sBAHQ,IAIfT,OAAOU,uBAJQ,IAKf,UAAUC,QAAV,EAAoB;WACXC,UAAP,CAAkBD,QAAlB,EAA4B,OAAO,EAAnC;GANJ;MAQIN,OAAJ,EAAa;WACJA,QAAQxB,IAAR,CAAamB,MAAb,EAAqBI,CAArB,EAAwBD,OAAxB,CAAP;GADF,MAEO;QACDD,SAAJ,EAAe;;KAAf,MAEO;aACEF,OAAOY,UAAP,CAAkBR,CAAlB,EAAqB,EAArB,CAAP;;;CAhBN;;AAqBA,IAAMS,qBAAqB,SAArBA,kBAAqB,GAAY;MAC/BC,UAAU,CAAC,QAAD,EAAW,KAAX,EAAkB,GAAlB,EAAuB,IAAvB,CAAhB;MACIC,OAAOf,OAAOgB,oBAAlB;OACK,IAAIC,IAAI,CAAR,EAAWC,MAAMJ,QAAQtC,MAA9B,EAAsCyC,IAAIC,GAAJ,IAAW,CAACH,IAAlD,EAAwDE,GAAxD,EAA6D;WACpDjB,OAAOc,QAAQG,CAAR,IAAa,sBAApB,KAA+CjB,OAAOc,QAAQG,CAAR,IAAa,6BAApB,CAAtD;;SAEKF,IAAP;CANF;;AASAf,OAAOmB,eAAP,GAAyB,UAAUC,EAAV,EAAc;MAC/BC,SAASR,oBAAf;MACIQ,MAAJ,EAAY;WACHxC,IAAP,CAAYmB,MAAZ,EAAoBoB,EAApB;GADF,MAEO;WACEE,YAAP,CAAoBF,EAApB;;CALJ;;;;;;;;;AChCA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;CAC3B,AAA+D,cAAc,GAAG,OAAO,EAAE,AAEzD,CAAC;CACjC,CAACG,cAAI,GAAG,YAAY;AAErB,SAAS,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;IAC/C,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,OAAO,IAAI,cAAc,CAAC,CAAC;CAC5F;;AAED,SAAS,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;;IAEnD,OAAO,KAAK,GAAG,IAAI,EAAE;QACjB,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACzE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7D,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACrE,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SACvD;;QAED,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,IAAI,CAAC,GAAG,KAAK,CAAC;;QAEd,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACnB,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;QAEvD,OAAO,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YACnC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;SACtC;;QAED,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;aAC/C;YACD,CAAC,EAAE,CAAC;YACJ,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;SACvB;;QAED,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;KAC7B;CACJ;;AAED,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;IACrB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAChB;;AAED,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CACrC;;AAED,OAAO,WAAW,CAAC;;CAElB,EAAE,EAAE;;;AC5DL,WAAc,GAAG,KAAK,CAAC;AACvB,aAAsB,GAAG,KAAK,CAAC;;;;AAI/B,SAAS,KAAK,CAAC,UAAU,EAAE,MAAM,EAAE;IAC/B,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC,EAAE,OAAO,IAAI,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;;;IAGnE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,IAAI,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;;IAElE,IAAI,MAAM,EAAE;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC5B;;IAED,IAAI,CAAC,KAAK,EAAE,CAAC;CAChB;;AAED,KAAK,CAAC,SAAS,GAAG;;IAEd,GAAG,EAAE,YAAY;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KACnC;;IAED,MAAM,EAAE,UAAU,IAAI,EAAE;;QAEpB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;YAChB,MAAM,GAAG,EAAE;YACX,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAEzB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO,MAAM,CAAC;;QAE3C,IAAI,aAAa,GAAG,EAAE;YAClB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,CAAC;;QAE7B,OAAO,IAAI,EAAE;YACT,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;gBAElD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;;gBAE9C,IAAI,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;oBAC7B,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC7B,IAAI,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;yBACxD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAClC;aACJ;YACD,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;SAC9B;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,QAAQ,EAAE,UAAU,IAAI,EAAE;;QAEtB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;YAChB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;QAEzB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;;QAE1C,IAAI,aAAa,GAAG,EAAE;YAClB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,CAAC;;QAE7B,OAAO,IAAI,EAAE;YACT,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;gBAElD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;;gBAE9C,IAAI,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;oBAC7B,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC;oBACxD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;YACD,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;SAC9B;;QAED,OAAO,KAAK,CAAC;KAChB;;IAED,IAAI,EAAE,UAAU,IAAI,EAAE;QAClB,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI,CAAC;;QAExC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;SACf;;;QAGD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;QAE5D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;;YAE5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;SAEpB,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;;YAEzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;SAEpC,MAAM;YACH,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;;gBAEhC,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,GAAG,OAAO,CAAC;aAClB;;;YAGD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAChE;;QAED,OAAO,IAAI,CAAC;KACf;;IAED,MAAM,EAAE,UAAU,IAAI,EAAE;QACpB,IAAI,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;KACf;;IAED,KAAK,EAAE,YAAY;QACf,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;;IAED,MAAM,EAAE,UAAU,IAAI,EAAE,QAAQ,EAAE;QAC9B,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;;QAEvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;YAChB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACxB,IAAI,GAAG,EAAE;YACT,OAAO,GAAG,EAAE;YACZ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;;;QAG9B,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;;YAExB,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBAClB,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC/B,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO,GAAG,IAAI,CAAC;aAClB;;YAED,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;gBAEhD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;;oBAEd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACrB,OAAO,IAAI,CAAC;iBACf;aACJ;;YAED,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,GAAG,CAAC,CAAC;gBACN,MAAM,GAAG,IAAI,CAAC;gBACd,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;aAE3B,MAAM,IAAI,MAAM,EAAE;gBACf,CAAC,EAAE,CAAC;gBACJ,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC1B,OAAO,GAAG,KAAK,CAAC;;aAEnB,MAAM,IAAI,GAAG,IAAI,CAAC;SACtB;;QAED,OAAO,IAAI,CAAC;KACf;;IAED,MAAM,EAAE,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;;IAExC,WAAW,EAAE,eAAe;IAC5B,WAAW,EAAE,eAAe;;IAE5B,MAAM,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;;IAEzC,QAAQ,EAAE,UAAU,IAAI,EAAE;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;KACf;;IAED,IAAI,EAAE,UAAU,IAAI,EAAE,MAAM,EAAE;QAC1B,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,OAAO,IAAI,EAAE;YACT,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;YAE5D,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;KACjB;;IAED,MAAM,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;;QAE1C,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC;YACpB,CAAC,GAAG,IAAI,CAAC,WAAW;YACpB,IAAI,CAAC;;QAET,IAAI,CAAC,IAAI,CAAC,EAAE;;YAER,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;;QAED,IAAI,CAAC,MAAM,EAAE;;YAET,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;YAG9C,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9C;;QAED,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;;;QAIrB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACrB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC;;QAEzB,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;QAEtD,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE;;YAEhC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;;YAErC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;YAEpD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;;gBAE9B,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;;;gBAGtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;aACjE;SACJ;;QAED,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE5B,OAAO,IAAI,CAAC;KACf;;IAED,cAAc,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;;QAE/C,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,cAAc,CAAC;;QAE1E,OAAO,IAAI,EAAE;YACT,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAEhB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,KAAK,EAAE,MAAM;;YAElD,OAAO,GAAG,cAAc,GAAG,QAAQ,CAAC;;YAEpC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACvB,WAAW,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;;;gBAG/C,IAAI,WAAW,GAAG,cAAc,EAAE;oBAC9B,cAAc,GAAG,WAAW,CAAC;oBAC7B,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC;oBAC1C,UAAU,GAAG,KAAK,CAAC;;iBAEtB,MAAM,IAAI,WAAW,KAAK,cAAc,EAAE;;oBAEvC,IAAI,IAAI,GAAG,OAAO,EAAE;wBAChB,OAAO,GAAG,IAAI,CAAC;wBACf,UAAU,GAAG,KAAK,CAAC;qBACtB;iBACJ;aACJ;;YAED,IAAI,GAAG,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzC;;QAED,OAAO,IAAI,CAAC;KACf;;IAED,OAAO,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;;QAEpC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM;YACpB,IAAI,GAAG,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACnC,UAAU,GAAG,EAAE,CAAC;;;QAGpB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;;;QAGnE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;QAGnB,OAAO,KAAK,IAAI,CAAC,EAAE;YACf,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;gBACtD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;gBAC/B,KAAK,EAAE,CAAC;aACX,MAAM,MAAM;SAChB;;;QAGD,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;KACrD;;;IAGD,MAAM,EAAE,UAAU,UAAU,EAAE,KAAK,EAAE;;QAEjC,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC;YACxB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;YACxB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;;QAEzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QAElC,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEpD,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC;QAC9F,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;QAEzB,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE/B,IAAI,KAAK,EAAE,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACvC;;IAED,UAAU,EAAE,UAAU,IAAI,EAAE,OAAO,EAAE;;QAEjC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACvB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;IAED,iBAAiB,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;;QAErC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,CAAC;;QAE/D,UAAU,GAAG,OAAO,GAAG,QAAQ,CAAC;;QAEhC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACzB,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;YAE1C,OAAO,GAAG,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACzC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;;;YAGzC,IAAI,OAAO,GAAG,UAAU,EAAE;gBACtB,UAAU,GAAG,OAAO,CAAC;gBACrB,KAAK,GAAG,CAAC,CAAC;;gBAEV,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC;;aAE7C,MAAM,IAAI,OAAO,KAAK,UAAU,EAAE;;gBAE/B,IAAI,IAAI,GAAG,OAAO,EAAE;oBAChB,OAAO,GAAG,IAAI,CAAC;oBACf,KAAK,GAAG,CAAC,CAAC;iBACb;aACJ;SACJ;;QAED,OAAO,KAAK,CAAC;KAChB;;;IAGD,gBAAgB,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;;QAEpC,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,eAAe;YAC5D,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,eAAe;YAC5D,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC;YACtD,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;;;;QAI3D,IAAI,OAAO,GAAG,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1D;;;IAGD,cAAc,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;;QAE3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;QAE5B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM;YACpB,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;YACvC,SAAS,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;YAC5C,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC;YACrD,CAAC,EAAE,KAAK,CAAC;;QAEb,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;YACpD,MAAM,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;SAClC;;QAED,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;YACrD,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;SACnC;;QAED,OAAO,MAAM,CAAC;KACjB;;IAED,mBAAmB,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;;QAE9C,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACzB;KACJ;;IAED,SAAS,EAAE,UAAU,IAAI,EAAE;;QAEvB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;iBAEjD,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;;aAEvB,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;KACJ;;IAED,WAAW,EAAE,UAAU,MAAM,EAAE;;;;;;;QAO3B,IAAI,UAAU,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;;QAE3C,IAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEtE,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,GAAG;YAC1B,iBAAiB,GAAG,MAAM,CAAC,CAAC,CAAC;YAC7B,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC;YACvB,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC;YACvB,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;KACvC;CACJ,CAAC;;AAEF,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;IACrC,IAAI,CAAC,QAAQ,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;IAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;KAC1C;IACD,OAAO,CAAC,CAAC,CAAC;CACb;;;AAGD,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE;IAC5B,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;CACzD;;;AAGD,SAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC5C,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;IACzB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;IACzB,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC;IAC1B,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC;;IAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC/B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;KACvD;;IAED,OAAO,QAAQ,CAAC;CACnB;;AAED,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAClB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAClC,OAAO,CAAC,CAAC;CACZ;;AAED,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;AAC1D,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;;AAE1D,SAAS,QAAQ,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AACxE,SAAS,UAAU,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;;AAExE,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;IACxB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;CAChE;;AAED,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;QAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;QAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;QAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;;IAEpC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC;WACxB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;CACnC;;AAED,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;IACpB,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;CAC3B;;AAED,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IACtB,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;WAChB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;CAC3B;;AAED,SAAS,UAAU,CAAC,QAAQ,EAAE;IAC1B,OAAO;QACH,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,CAAC,QAAQ;QACf,IAAI,EAAE,CAAC,QAAQ;KAClB,CAAC;CACL;;;;;AAKD,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE;IAC/C,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;QACrB,GAAG,CAAC;;IAER,OAAO,KAAK,CAAC,MAAM,EAAE;QACjB,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACpB,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;QAEnB,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,EAAE,SAAS;;QAEhC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACnD,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;QAE5C,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;KACrC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3iBD,IAAMC,WAAW;cACH,CADG;eAEF,GAFE;oBAGG,CAHH;eAIF,GAJE;qBAKI,EALJ;kBAMC,GAND;uBAOM,IAPN;aAQJ,GARI;WASN,GATM;UAUP,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,CAVO;eAWF,CAXE;oBAYG,CAZH;aAaJ;CAbb;;AAgBA,IAAMC,mBAAmB,CAACC,GAAD,EAAMA,GAAN,EAAW,IAAX,CAAzB;;IAEMC;;;sBACSC,IAAb,EAAiC;QAAdC,OAAc,uEAAJ,EAAI;;;gDAC/B,2BAAMA,OAAN,CAD+B;;UAG1BL,QAAL,GAAgBzD,OAAOC,MAAP,CAAc,EAAd,EAAkBwD,QAAlB,EAA4BK,OAA5B,CAAhB;;UAMKC,OAAL,GAAe,IAAf;;UAOKC,KAAL,GAAa,EAAb;UACKC,MAAL,GAAc,IAAd;;UAOKC,QAAL,GAAgB,EAAhB;;UAOKC,QAAL,GAAgB,KAAhB;;UAOKC,KAAL,GAAaC,SAAb;;UAKKR,IAAL,GAAY,EAAZ;QACIA,IAAJ,EAAU;YACHS,OAAL,CAAaT,IAAb;;;UAQGU,cAAL,GAAsB,IAAtB;;UAEKC,SAAL,CAAe,IAAIC,GAAGC,MAAH,CAAUC,WAAd,CAA0B;YACjCb,QAAQc,IADyB;aAEhCd,QAAQe,KAFwB;oBAGzBf,QAAQgB,YAHiB;mBAI1BhB,QAAQiB,WAJkB;sBAKvB,MAAKC,cAAL,CAAoBtD,IAApB,OALuB;kBAM1BoC,QAAQjD,cAAR,CAAuB,YAAvB,IAAuCiD,QAAQmB,UAA/C,GAA4D,WANlC;aAO/BnB,QAAQjD,cAAR,CAAuB,OAAvB,IAAkCiD,QAAQoB,KAA1C,GAAkD;KAP7C,CAAf;UASKC,EAAL,CAAQ,YAAR,EAAsB,MAAKC,MAA3B;;;;uBAOFC,6BAAW;WACF,KAAKxB,IAAZ;;;uBAQFS,2BAAST,MAAM;QACPyB,OAAO,KAAKC,MAAL,EAAb;QACI,CAACD,IAAL,EAAW,OAAO,IAAP;eACI,CAACzB,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,CAHF;QAGR2B,EAHQ;QAGJC,EAHI;gBAIM,CAACD,GAAGE,MAAH,CAAUC,EAAX,EAAeH,GAAGE,MAAH,CAAUE,EAAzB,CAJN;QAIRC,IAJQ;QAIFC,IAJE;;SAKR,IAAIC,IAAI,CAAb,EAAgBA,IAAID,IAApB,EAA0BC,GAA1B,EAA+B;UACvBC,MAAM,KAAK,MAAMD,CAAN,GAAUD,IAA3B;UACIG,KAAKC,GAAL,CAASF,GAAT,IAAgB,IAApB,EAA0B;;;WAGrB,IAAI9C,IAAI,CAAb,EAAgBA,IAAI2C,IAApB,EAA0B3C,GAA1B,EAA+B;YACvBiD,MAAM,CAAC,GAAD,GAAO,MAAMjD,CAAN,GAAU2C,IAA7B;YACMO,QAAQ3B,GAAG4B,IAAH,CAAQC,SAAR,CAAkB,CAACH,GAAD,EAAMH,GAAN,CAAlB,EAA8B,WAA9B,EAA2C,WAA3C,CAAd;YACMO,MAAMV,OAAOE,CAAP,GAAW7C,CAAvB;YACMsD,IAAIhB,GAAG3B,IAAH,CAAQ0C,GAAR,CAAV;YACME,IAAIhB,GAAG5B,IAAH,CAAQ0C,GAAR,CAAV;aACKG,YAAL,CAAkBN,MAAM,CAAN,CAAlB,EAA4BA,MAAM,CAAN,CAA5B,EAAsCI,CAAtC,EAAyCC,CAAzC;;;WAGG,IAAP;;;uBAWFC,qCAAcC,GAAGC,GAAGC,KAAKC,OAAOC,SAAS;UACjCF,OAAO,CAAb;YACQC,SAAS,CAAjB;SACK1C,KAAL,CAAW4C,MAAX,CAAkB;YACVL,CADU;YAEVC,CAFU;YAGVD,CAHU;YAIVC,CAJU;SAKbD,CALa;SAMbC,CANa;SAObC,GAPa;SAQbC;KARL;;;uBAgBFG,yBAAQzF,QAAQ;QACR0F,SAAS,KAAKC,UAAL,EAAf;QACI,CAAC,KAAK9B,OAAL,EAAD,IAAmB,CAAC6B,MAAxB,EAAgC,OAAO,IAAP;QAC5B,CAAC,KAAK7B,OAAL,EAAL,EAAqB,OAAO,IAAP;QACjB7D,UAAU,CAAC,KAAK2C,QAApB,EAA8B;WACvBiD,KAAL;KADF,MAEO,IAAI5F,UAAU,KAAK2C,QAAnB,EAA6B;WAC7BkD,MAAL;;WAEK,IAAP;;;uBAMFjC,2BAAU;QACJ,CAAC,KAAKjB,QAAV,EAAoB;QACdmD,UAAU,KAAK7D,QAAL,CAAcyD,MAAd,IAAwB,KAAKC,UAAL,EAAxC;SACKI,SAAL,CAAeD,OAAf;;;uBAMFE,iCAAa;QACLC,MAAM,KAAKlC,MAAL,EAAZ;QACI,CAACkC,GAAD,IAAQ,CAAC,KAAKxD,MAAlB,EAA0B;;;QAGpByD,QAAQD,IAAIE,OAAJ,EAAd;QACML,UAAU,KAAK7D,QAAL,CAAcyD,MAAd,IAAwB,KAAKC,UAAL,EAAxC;QACMS,MAAM3B,KAAK4B,GAAL,CAASH,MAAM,CAAN,CAAT,EAAmBA,MAAM,CAAN,CAAnB,CAAZ;QACII,WAAW7B,KAAK8B,GAAL,CAASH,MAAM,KAAKnE,QAAL,CAAcuE,UAA7B,EAAyC,KAAKvE,QAAL,CAAcwE,WAAvD,CAAf;QACIlH,UAAJ,EAAgB;kBACF,KAAK0C,QAAL,CAAcyE,gBAA1B;;QAEIC,WAAW,KAAKC,SAAL,GAAiBnC,KAAK4B,GAAL,CAASP,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAAtB,EAAkCA,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAA/C,IAA6DQ,QAA/F;QACMO,UAAU,KAAKjE,KAAL,CAAWkE,MAAX,CAAkB;YAC1BhB,QAAQ,CAAR,CAD0B;YAE1BA,QAAQ,CAAR,CAF0B;YAG1BA,QAAQ,CAAR,CAH0B;YAI1BA,QAAQ,CAAR;KAJQ,CAAhB;QAMMiB,QAAQF,WAAWA,QAAQ5H,MAAjC;QACM+H,WAAWvC,KAAKwC,IAAL,CAAUF,KAAV,KAAoB,CAArC;QACMG,SAASzC,KAAK4B,GAAL,CAAUP,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAAvB,EAAqCA,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAAlD,IAAiEkB,QAAhF;;SAEKG,aAAL,GAAqB1C,KAAK2C,IAAL,CAAU,CAACtB,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAAd,IAA4Ba,QAAtC,CAArB;SACKU,aAAL,GAAqB5C,KAAK2C,IAAL,CAAU,CAACtB,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAAd,IAA4Ba,QAAtC,CAArB;QACMW,OAAO,EAAb;SACK,IAAI/C,IAAI,CAAb,EAAgBA,IAAI,KAAK8C,aAAL,GAAqB,CAAzC,EAA4C9C,GAA5C,EAAiD;UAC3Ca,IAAIU,QAAQ,CAAR,IAAavB,IAAIoC,QAAzB;UACIvB,KAAKU,QAAQ,CAAR,CAAL,IAAmBV,KAAKU,QAAQ,CAAR,CAA5B,EAAwC;YAChCyB,MAAM,EAAZ;aACK,IAAI7F,IAAI,CAAb,EAAgBA,IAAI,KAAKyF,aAAL,GAAqB,CAAzC,EAA4CzF,GAA5C,EAAiD;cAC3CyD,IAAIW,QAAQ,CAAR,IAAapE,IAAIiF,QAAzB;cACIjF,CAAJ,IAAS,KAAK8F,YAAL,CAAkBrC,CAAlB,EAAqBC,CAArB,EAAwB,CAACD,IAAI+B,MAAL,EAAa9B,IAAI8B,MAAjB,EAAyB/B,IAAI+B,MAA7B,EAAqC9B,IAAI8B,MAAzC,CAAxB,CAAT;cACIO,SAAS,CAAb;iBACOF,IAAI7F,CAAJ,EAAO,CAAP,MAAc,IAAd,IAAsB+F,UAAU,KAAKxF,QAAL,CAAcyF,WAArD,EAAkE;sBACtD,CAAV;gBACIC,UAAUF,SAASP,MAAvB;gBACIxF,CAAJ,IAAS,KAAK8F,YAAL,CAAkBrC,CAAlB,EAAqBC,CAArB,EAAwB,CAACD,IAAIwC,OAAL,EAAcvC,IAAIuC,OAAlB,EAA2BxC,IAAIwC,OAA/B,EAAwCvC,IAAIuC,OAA5C,CAAxB,CAAT;;;aAGCpD,CAAL,IAAUgD,GAAV;;;SAGC/E,KAAL,GAAa8E,IAAb;SACK7E,MAAL,GAAc,KAAd;;;uBAYFe,yCAAgBkC,QAAQkC,YAAYC,YAAYC,MAAMrE,YAAY;QAC5D,CAAC,KAAKlB,OAAV,EAAmB;WACZA,OAAL,GAAe5C,aAAamI,KAAK,CAAL,CAAb,EAAsBA,KAAK,CAAL,CAAtB,CAAf;KADF,MAEO;WACAvF,OAAL,CAAa3C,KAAb,GAAqBkI,KAAK,CAAL,CAArB;WACKvF,OAAL,CAAa1C,MAAb,GAAsBiI,KAAK,CAAL,CAAtB;;QAEEF,cAAc,KAAKG,GAAL,CAAS,eAAT,CAAlB,EAA6C;WACtCtC,MAAL,CAAY,KAAKlD,OAAjB;KADF,MAEO;WAGA,KAAKA,OAAZ;;;uBAOFyF,mCAAc;WACL,KAAKzF,OAAL,IAAgB,KAAKA,OAAL,CAAayF,UAAb,CAAwB,IAAxB,CAAvB;;;uBAQFrC,mCAAc;QACR,CAAC,KAAK5B,MAAL,EAAL,EAAoB;QACd+D,OAAO,KAAKG,WAAL,EAAb;QACMC,QAAQ,KAAKnE,MAAL,GAAcoE,OAAd,EAAd;WACOD,SAASA,MAAME,eAAN,CAAsBN,IAAtB,CAAhB;;;uBAQFG,qCAAe;QACT,CAAC,KAAKlE,MAAL,EAAL,EAAoB;WACb,KAAKA,MAAL,GAAcoC,OAAd,EAAP;;;uBAOFkC,6BAAUpC,KAAK;QACTA,OAAOA,eAAehD,GAAGqF,GAA7B,EAAkC;WAC3BC,GAAL,CAAS,WAAT,EAAsBtC,GAAtB;UACIuC,QAAJ,CAAa,IAAb;KAFF,MAGO;YACC,IAAIC,KAAJ,CAAU,gBAAV,CAAN;;;;uBAQJC,iCAAa;QACL5E,OAAO,KAAKC,MAAL,EAAb;QACI,CAACD,IAAL,EAAW;SACN6E,WAAL,GAAmB,IAAnB;SACKC,WAAL,CAAiB,IAAjB;SACKC,OAAL;SACK9E,MAAL,GAAc+E,UAAd;;;uBAMFF,qCAAe;QACP9E,OAAO,KAAKC,MAAL,EAAb;QACI,CAACD,IAAL,EAAW;SACNiF,EAAL,CAAQ,YAAR,EAAsB,KAAKnF,MAA3B,EAAmC,IAAnC;SACKgF,WAAL,CAAiB,IAAjB;WACO,KAAKrG,OAAZ;WACO,KAAKoG,WAAZ;;;uBAOFK,yBAAQ/C,KAAK;SACNsC,GAAL,CAAS,WAAT,EAAsBtC,GAAtB;;;uBAOFlC,2BAAU;WACD,KAAKgE,GAAL,CAAS,WAAT,CAAP;;;uBAOFnC,yBAAS;QACDqD,OAAO,IAAb;SACKjD,SAAL;QACIkD,OAAOC,KAAKC,GAAL,EAAX;SACKzG,QAAL,GAAgB,IAAhB;KACC,SAAS0G,KAAT,GAAkB;WACZtG,cAAL,GAAsBtC,OAAOC,gBAAP,CAAwB2I,KAAxB,CAAtB;UACMD,MAAMD,KAAKC,GAAL,EAAZ;UACME,QAAQF,MAAMF,IAApB;UACII,QAAQ,OAAOL,KAAKhH,QAAL,CAAcsH,SAAjC,EAA4C;eACnCH,MAAOE,QAAQ,IAAR,GAAeL,KAAKhH,QAAL,CAAcsH,SAA3C;aACKC,OAAL;aACKC,KAAL;;KAPJ;WAUO,IAAP;;;uBAOFC,uBAAQ;SACD/G,QAAL,GAAgB,IAAhB;QACI,KAAKI,cAAT,EAAyBtC,OAAOmB,eAAP,CAAuB,KAAKmB,cAA5B;WAClB,IAAP;;;uBAQF4G,uBAAOC,cAAc;SACdC,SAAL,GAAiB,IAAjB;SACKC,aAAL;SACKrH,MAAL,GAAc,IAAd;WACO,IAAP;;;uBAMFoD,2BAAU;SACHpD,MAAL,GAAc,IAAd;SACKgH,KAAL;;;uBAOFK,yCAAiB;QACT1J,UAAU,KAAK4H,UAAL,EAAhB;YACQ+B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKxH,OAAL,CAAa3C,KAArC,EAA4C,KAAK2C,OAAL,CAAa1C,MAAzD;;;uBAOF4J,yBAAS;;;QACDxD,MAAM,KAAKlC,MAAL,EAAZ;QACM3D,UAAU,KAAK4H,UAAL,EAAhB;QACI,KAAKvF,MAAT,EAAiB;WACVqH,aAAL;UACI,KAAKnH,QAAT,EAAmB;mBACN,YAAM;iBACVqD,SAAL;iBACKgE,UAAL,GAAkB,IAAlB;SAFF,EAGG,OAAO,KAAK/H,QAAL,CAAcsH,SAHxB;;;QAMA,KAAK5G,QAAT,EAAmB;UACb,CAAC,KAAKqH,UAAV,EAAsB;aACfA,UAAL,GAAkB,EAAlB;YACMC,gBAAgB,KAAK9C,aAAL,GAAqB,KAAKE,aAA1B,GAA0C,KAAKpF,QAAL,CAAciI,mBAA9E;aACK,IAAIxI,IAAI,CAAb,EAAgBA,IAAIuI,aAApB,EAAmCvI,GAAnC,EAAwC;eACjCsI,UAAL,CAAgBG,IAAhB,CAAqB,KAAKC,YAAL,EAArB;;;WAGCZ,OAAL;UACI,CAAC,KAAK9G,QAAV,EAAoB;;;;cAIZ2H,WAAR,GAAsB,KAAKC,UAAL,MAAqB,IAA3C;cACQC,wBAAR,GAAmC,iBAAnC;cACQC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAKjI,OAAL,CAAa3C,KAApC,EAA2C,KAAK2C,OAAL,CAAa1C,MAAxD;cACQ0K,wBAAR,GAAmC,aAAnC;cACQE,SAAR,GAAoB,KAAKxI,QAAL,CAAcwI,SAAlC;cACQJ,WAAR,GAAsB,KAAKC,UAAL,MAAqB,IAA3C;UACM5E,SAAS,KAAKC,UAAL,EAAf;UACMgB,WAAW,KAAKC,SAAtB;UACK8D,QArBY,GAqBC,EArBD;;WAsBZ,IAAIhJ,KAAI,CAAb,EAAgBA,KAAI,KAAKgB,QAAL,CAAczD,MAAlC,EAA0CyC,IAA1C,EAA+C;YACvCiJ,QAAQ,KAAKjI,QAAL,CAAchB,EAAd,CAAd;gBACQkJ,SAAR;gBACQC,WAAR,GAAsB,KAAK5I,QAAL,CAAc6I,MAAd,CAAqBpJ,EAArB,CAAtB;aACK,IAAI6C,IAAI,CAAb,EAAgBA,IAAIoG,MAAM1L,MAA1B,EAAkCsF,GAAlC,EAAuC;qBAC1BoG,MAAMpG,CAAN,KAAY,EAAvB;cACMY,IAAIO,OAAO,CAAP,IAAYiB,WAAW+D,SAASvF,CAA1C;cACMC,IAAIM,OAAO,CAAP,IAAYiB,WAAW+D,SAAStF,CAA1C;cACM2F,KAAKrF,OAAO,CAAP,IAAYiB,WAAW+D,SAASK,EAA3C;cACMC,KAAKtF,OAAO,CAAP,IAAYiB,WAAW+D,SAASM,EAA3C;cACItF,WAAWP,IAAIO,OAAO,CAAP,CAAJ,IAAiBP,IAAIO,OAAO,CAAP,CAAhC,CAAJ,EAAgD;;;cAG5CuF,QAAQhF,IAAIiF,sBAAJ,CAA2B,CAAC/F,CAAD,EAAIC,CAAJ,CAA3B,CAAZ;kBACQ+F,MAAR,CAAeF,MAAM,CAAN,CAAf,EAAyBA,MAAM,CAAN,CAAzB;kBACQhF,IAAIiF,sBAAJ,CAA2B,CAACH,EAAD,EAAKC,EAAL,CAA3B,CAAR;kBACQI,MAAR,CAAeH,MAAM,CAAN,CAAf,EAAyBA,MAAM,CAAN,CAAzB;mBACS9F,CAAT,GAAauF,SAASK,EAAtB;mBACS3F,CAAT,GAAasF,SAASM,EAAtB;;gBAEMK,MAAR;;;;;uBASNjB,qCAAckB,KAAK;WACV;SACF7G,KAAK8G,KAAL,CAAW9G,KAAK+G,MAAL,KAAgB,KAAKrE,aAAhC,CADE;SAEF1C,KAAK8G,KAAL,CAAW9G,KAAK+G,MAAL,KAAgB,KAAKnE,aAAhC,CAFE;WAGAiE,QAAQG,SAAR,GAAoBhH,KAAKiH,KAAL,CAAWjH,KAAK+G,MAAL,KAAgB,KAAKvJ,QAAL,CAAc0J,cAAzC,CAApB,GAA+EL;KAHtF;;;uBAcFM,+BAAWzG,GAAGC,GAAG;QACX,CAAC,KAAK5C,KAAV,EAAiB,OAAON,gBAAP;QACXoC,OAAO,KAAK9B,KAAL,CAAWiC,KAAK8G,KAAL,CAAWnG,CAAX,CAAX,CAAb;;WAEQd,QAAQA,KAAKG,KAAK8G,KAAL,CAAWpG,CAAX,CAAL,CAAR,IAA+BjD,gBAAvC;;;uBAOFsH,6BAAW;QACHK,YAAY,KAAKG,UAAvB;QACI,CAACH,SAAL,EAAgB;;;QAGVgC,UAAU,KAAK5J,QAAL,CAAc6I,MAAd,CAAqB7E,GAArB,CAAyB,YAAY;aAC5C,EAAP;KADc,CAAhB;QAGM6F,aAAa,KAAK7J,QAAL,CAAc8J,WAAd,GAA4B,KAAK9J,QAAL,CAAc+J,iBAA7D;QACItB,iBAAJ;SACK,IAAIhJ,IAAI,CAAb,EAAgBA,IAAImI,UAAU5K,MAA9B,EAAsCyC,GAAtC,EAA2C;iBAC9BmI,UAAUnI,CAAV,CAAX;UACIgJ,SAASY,GAAT,GAAe,KAAKrJ,QAAL,CAAc0J,cAAjC,EAAiD;mBACpC,KAAKvB,YAAL,CAAkB,CAAlB,CAAX;;kBAEW,CAACM,SAASvF,CAAV,EAAauF,SAAStF,CAAtB,CAL4B;UAKpCD,CALoC;UAKjCC,CALiC;;UAMrCH,IAAI,KAAK2G,SAAL,CAAezG,CAAf,EAAkBC,CAAlB,CAAR;UACI,CAACH,EAAE,CAAF,CAAL,EAAW;mBACE,KAAKmF,YAAL,CAAkB,CAAlB,CAAX;OADF,MAEO,IAAI,KAAKwB,SAAL,CAAezG,CAAf,EAAkBC,CAAlB,EAAqB,CAArB,MAA4B,IAAhC,EAAsC;iBAClC2F,EAAT,GAAc5F,IAAIF,EAAE,CAAF,IAAO6G,UAAzB;iBACSd,EAAT,GAAc5F,IAAIH,EAAE,CAAF,IAAO6G,UAAzB;gBACQ,KAAKG,WAAL,CAAiBhH,EAAE,CAAF,CAAjB,CAAR,EAAgCkF,IAAhC,CAAqCO,QAArC;OAHK,MAIA;iBACIvF,CAAT,GAAaA,IAAIF,EAAE,CAAF,IAAO6G,UAAxB;iBACS1G,CAAT,GAAaA,IAAIH,EAAE,CAAF,IAAO6G,UAAxB;;eAEOR,GAAT;;SAEG5I,QAAL,GAAgBmJ,OAAhB;;;uBAWFrE,qCAAcrC,GAAGC,GAAG8G,cAAc;QAC1BrF,UAAU,KAAKjE,KAAL,CAAWkE,MAAX,CAAkB;YAC1BoF,aAAa,CAAb,CAD0B;YAE1BA,aAAa,CAAb,CAF0B;YAG1BA,aAAa,CAAb,CAH0B;YAI1BA,aAAa,CAAb;KAJQ,CAAhB;QAMKC,GAP2B,GAOL,CAPK;QAOtBC,GAPsB,GAOF,CAPE;QAOjBC,OAPiB,GAOC,CAPD;;QAQ5BC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,MAAhB;QACIC,SAAJ,EAAe1H,CAAf,EAAkBC,CAAlB;SACK,IAAIvD,IAAI,CAAR,EAAWiL,OAAOlI,KAAK8B,GAAL,CAAS,KAAKtE,QAAL,CAAc2K,gBAAvB,EAAyC/F,QAAQ5H,MAAjD,CAAvB,EAAiFyC,IAAIiL,IAArF,EAA2FjL,GAA3F,EAAgG;kBAClFmF,QAAQnF,CAAR,CAAZ;WACKgL,UAAUvH,CAAV,GAAcA,CAAnB;WACKuH,UAAUtH,CAAV,GAAcA,CAAnB;UACIkH,OAAO,CAAP,IAAYC,OAAO,CAAvB,EAA0B;YACpBG,UAAU1H,CAAd;YACI0H,UAAUzH,CAAd;eACO,CAACD,CAAD,EAAIC,CAAJ,EAAOR,KAAKwC,IAAL,CAAUjC,IAAIA,CAAJ,GAAQC,IAAIA,CAAtB,CAAP,CAAP;;WAEGqH,KAAKA,EAAL,GAAUC,KAAKA,EAApB;eACS9H,KAAKwC,IAAL,CAAU,IAAIuF,EAAd,CAAT;aACOE,UAAU1H,CAAV,GAAcyH,MAArB;aACOC,UAAUzH,CAAV,GAAcwH,MAArB;iBACWA,MAAX;;QAEEJ,UAAU,CAAd,EAAiB;UACXF,MAAME,OAAV;UACID,MAAMC,OAAV;aACO,CAACrH,CAAD,EAAIC,CAAJ,EAAOR,KAAKwC,IAAL,CAAUjC,IAAIA,CAAJ,GAAQC,IAAIA,CAAtB,CAAP,CAAP;;WAEK/C,gBAAP;;;uBASF+J,mCAAaY,GAAG;QACRb,oBAAoB,KAAK/J,QAAL,CAAc+J,iBAAxC;WACOvH,KAAKiH,KAAL,CAAWjH,KAAK8B,GAAL,CAASsG,CAAT,EAAYb,iBAAZ,IAAiCA,iBAAjC,IAAsD,KAAK/J,QAAL,CAAc6I,MAAd,CAAqB7L,MAArB,GAA8B,CAApF,CAAX,CAAP;;;;EAhiBqBgE,GAAG6J,KAAH,CAASC;;;;;;;;"}